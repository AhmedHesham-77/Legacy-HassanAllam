services:
  kong-database:
    container_name: kong-database
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_KONG_USER}
      POSTGRES_DB: ${POSTGRES_KONG_DB}
      POSTGRES_PASSWORD: ${POSTGRES_KONG_PASSWORD}
    ports:
      - "${GLOBAL_HOST}:56432:5432"
    networks:
      - kong-net
    volumes:
      - kong-database:/var/lib/postgresql/data

  kong-migrations:
    container_name: kong-migrations
    image: kong:3.8.0
    depends_on:
      - kong-database
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_PASSWORD: ${POSTGRES_KONG_PASSWORD}
    networks:
      - kong-net
    command: kong migrations bootstrap
    restart: "no"

  kong-gateway:
    container_name: kong-gateway
    image: kong:3.8.0
    depends_on:
      - kong-database
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: ${POSTGRES_KONG_USER}
      KONG_PG_PASSWORD: ${POSTGRES_KONG_PASSWORD}
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_ADMIN_GUI_URL: http://${GLOBAL_HOST}:8002
    ports:
      - "${GLOBAL_HOST}:8000:8000"
      - "${GLOBAL_HOST}:8443:8443"
      - "${GLOBAL_HOST}:8001:8001"
      - "${GLOBAL_HOST}:8002:8002"
      - "${GLOBAL_HOST}:8444:8444"
    networks:
      - kong-net
    restart: always

  fida-monitors:
    container_name: fida
    build:
      context: .
      dockerfile: Fida_monitors/image/Dockerfile
    ports:
      - "${GLOBAL_HOST}:56434:56434"
    volumes:
      - type: bind
        source: ./Fida_monitors
        target: /fida/Fida_monitors
      - type: bind
        source: ./shared
        target: /fida/Fida_monitors/shared
      - fida-monitors-data:/fida/Fida_monitors/databases
    env_file:
      - ./.env
    networks:
      - fida-monitors-network

  entertainment_pcs:
    container_name: entertainment
    build:
      context: .
      dockerfile: Entertainment_PCs/image/Dockerfile
    ports:
      - "${GLOBAL_HOST}:56435:56435"
    volumes:
      - type: bind
        source: ./Entertainment_PCs
        target: /entertainment/Entertainment_PCs
      - type: bind
        source: ./shared
        target: /entertainment/Entertainment_PCs/shared
      - entertainment-pcs-data:/entertainment/Entertainment_PCs/databases
    env_file:
      - ./.env
    networks:
      - entertainment-pcs-network
  #
  qsys:
    container_name: qsys
    build:
      context: .
      dockerfile: Qsys_systems/image/Dockerfile
    ports:
      - "${GLOBAL_HOST}:56436:56436"
    volumes:
      - type: bind
        source: ./Qsys_systems
        target: /Qsys/Qsys_systems
      - type: bind
        source: ./shared
        target: /Qsys/Qsys_systems/shared
      - qsys-data:/Qsys/Qsys_systems/databases
    env_file:
      - ./.env
    networks:
      - qsys-network

  app_space:
    container_name: appspace
    build:
      context: .
      dockerfile: appspace_players/image/Dockerfile
    ports:
      - "${GLOBAL_HOST}:56437:56437"
    volumes:
      - type: bind
        source: ./appspace_players
        target: /appspace/appspace_players
      - type: bind
        source: ./shared
        target: /appspace/appspace_players/shared
      - appspace-data:/appspace/appspace_players/json
      - appspace-data:/appspace/appspace_players/databases
    env_file:
      - ./.env
    networks:
      - appspace-network

  analysis:
    container_name: analysis
    build:
      context: .
      dockerfile: postgres/image/Dockerfile
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - analysis-data:/analysis/postgres/databases copy
      - type: bind
        source: ./postgres
        target: /analysis/postgres
    env_file:
      - ./.env

  database:
    container_name: postgres
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_ANALYSIS_USER}
      POSTGRES_PASSWORD: ${POSTGRES_ANALYSIS_PASSWORD}
      POSTGRES_DB: ${POSTGRES_ANALYSIS_DB}
    ports:
      - "${GLOBAL_HOST}:56433:5432"
    volumes:
      - analysis-database:/var/lib/postgresql/data

volumes:
  analysis-database:
  kong-database:
  qsys-data:
  analysis-data:
  appspace-data:
  fida-monitors-data:
  entertainment-pcs-data:

networks:
  kong-net:
    driver: bridge
  fida-monitors-network:
    driver: bridge
  entertainment-pcs-network:
    driver: bridge
  appspace-network:
    driver: bridge
  qsys-network:
    driver: bridge